[{"id":0,"href":"/books/rust/","title":"","parent":"","content":"Rust Rusher     《Rust 程序设计语言》      电子书:  https://rustwiki.org/zh-CN/book/title-page.html https://github.com/rust-lang-cn/book-cn?tab=readme-ov-file   视频:  https://www.bilibili.com/video/BV1hp4y1k7SV/    Rust-Awesome      https://awesome-rust.com/  rust 视频     ","description":"Rust Rusher     《Rust 程序设计语言》      电子书:  https://rustwiki.org/zh-CN/book/title-page.html https://github.com/rust-lang-cn/book-cn?tab=readme-ov-file   视频:  https://www.bilibili.com/video/BV1hp4y1k7SV/    Rust-Awesome      https://awesome-rust.com/  rust 视频     "},{"id":1,"href":"/books/rust/setup/install/","title":"1. 安装配置","parent":"1. 环境准备","content":"在 官网 有推荐的安装方式。\n这里 推荐 使用 rustup-init 安装\n在安装之前， 需要提前配置环境变量\n crates 仓库 加速源 安装位置 (可选): 默认安装位置是在 ${HOME} 下面。 执行 rustup-init 时有提示。  # Required: In China # https://zhuanlan.zhihu.com/p/126204128 ## 字节加速源 export RUSTUP_DIST_SERVER=\u0026#34;https://rsproxy.cn\u0026#34; export RUSTUP_UPDATE_ROOT=\u0026#34;https://rsproxy.cn/rustup\u0026#34; # ## Optional: customize install # export RUST_ROOT=/usr/local/rust # ### RUST offical config # export RUSTUP_HOME=${RUST_ROOT}/rustup # export CARGO_HOME=${RUST_ROOT}/cargo # ### Setup: Export Path # source \u0026#34;${CARGO_HOME}/cargo/env\u0026#34; 使用 rustup-init 安装     在 其他安装方式 - Rustup 页面下载对应系统的 rustup-init 文件。\n$ chmod +x rustup-init $ ./rustup-init 阅读提示基本上 默认 选择 (1) 安装即可。\n$ which rustc cargo /usr/local/bin/rustc /usr/local/bin/cargo $ rustc --version rustc 1.76.0 (07dca489a 2024-02-04) 针对 Mac 的额外设置     1. 初始化目录     如果和我一样将 rust 安装到了 /usr/local/rust 目录中， 需要 额外初始化 一下安装目录\nexport RUST_ROOT=/usr/local/rust sudo mkdir -p ${RUST_ROOT} sudo chown ${USERNAME}:staff ${RUST_ROOT} 2. Mac M1 Customize     截止 2024-02-29， rustup-init 并没有发布针对 Mac M1 的版本。\n 可以选择暂时 x86_64-apple-darwin 在执行 rustup-init 时， 先选(2)， 指定安装版本为 aarch64-apple-darwin 配置完成后， 再选(1) 进行安装   default host triple: aarch64-apple-darwin default toolchain: stable profile: default modify PATH variable: yes ","description":"在 官网 有推荐的安装方式。\n这里 推荐 使用 rustup-init 安装\n在安装之前， 需要提前配置环境变量\n crates 仓库 加速源 安装位置 (可选): 默认安装位置是在 ${HOME} 下面。 执行 rustup-init 时有提示。  # Required: In China # https://zhuanlan.zhihu.com/p/126204128 ## 字节加速源 export RUSTUP_DIST_SERVER=\u0026#34;https://rsproxy.cn\u0026#34; export RUSTUP_UPDATE_ROOT=\u0026#34;https://rsproxy.cn/rustup\u0026#34; # ## Optional: customize install # export RUST_ROOT=/usr/local/rust # ### RUST offical config # export RUSTUP_HOME=${RUST_ROOT}/rustup # export CARGO_HOME=${RUST_ROOT}/cargo # ### Setup: Export Path # source \u0026#34;${CARGO_HOME}/cargo/env\u0026#34; 使用 rustup-init 安装     在 其他安装方式 - Rustup 页面下载对应系统的 rustup-init 文件。"},{"id":2,"href":"/books/rust/resources/books/","title":"1. 工具书","parent":"98. 资源分享","content":" 精通Rust（第2版）.pdf  ","description":" 精通Rust（第2版）.pdf  "},{"id":3,"href":"/books/rust/setup/","title":"1. 环境准备","parent":"","content":"","description":""},{"id":4,"href":"/books/rust/toolschain/rustup/","title":"2. rustup","parent":"2. 工具链","content":"我也不知道做什么的， 看文档是管理 rust 版本的。\n 官网: https://rust-lang.github.io/rustup/index.html Github: https://github.com/rust-lang/rustup  ","description":"我也不知道做什么的， 看文档是管理 rust 版本的。\n 官网: https://rust-lang.github.io/rustup/index.html Github: https://github.com/rust-lang/rustup  "},{"id":5,"href":"/books/rust/setup/vscode/","title":"2. vscode 配置","parent":"1. 环境准备","content":"1. 插件安装      官方插件 rust-analyzer cargo 管理插件 crates  2. 自动保存     在 settings.json 中增加如下配置\n{ \u0026#34;files.associations\u0026#34;: { \u0026#34;*.rs\u0026#34;: \u0026#34;rust\u0026#34;, }, \u0026#34;[rust]\u0026#34;: { // rust \u0026#34;editor.formatOnSave\u0026#34;: true, }, } ","description":"1. 插件安装      官方插件 rust-analyzer cargo 管理插件 crates  2. 自动保存     在 settings.json 中增加如下配置\n{ \u0026#34;files.associations\u0026#34;: { \u0026#34;*.rs\u0026#34;: \u0026#34;rust\u0026#34;, }, \u0026#34;[rust]\u0026#34;: { // rust \u0026#34;editor.formatOnSave\u0026#34;: true, }, } "},{"id":6,"href":"/books/rust/toolschain/","title":"2. 工具链","parent":"","content":"","description":""},{"id":7,"href":"/books/rust/resources/videos/","title":"2. 视频课","parent":"98. 资源分享","content":" rust 入门百度盘合集  ","description":" rust 入门百度盘合集  "},{"id":8,"href":"/books/rust/toolschain/cargo/","title":"3. cargo","parent":"2. 工具链","content":"TBC\n","description":"TBC"},{"id":9,"href":"/books/rust/setup/demo/","title":"3. Demo - Hello Rust","parent":"1. 环境准备","content":" 创建文件 hello.rs  // hello.rs usestd::env;fn main(){letname=env::args().skip(1).next();matchname{Some(n)=\u0026gt;println!(\u0026#34;Hello, {}!\u0026#34;,n),None=\u0026gt;println!(\u0026#34;Did\u0026#39;t get a name!\u0026#34;),}}编译并运行  $ rustc hello.rs $ ls # hello hello.rs $ ./hello # Did\u0026#39;t get a name! $ ./hello Rust # Hello, Rust! ","description":" 创建文件 hello.rs  // hello.rs usestd::env;fn main(){letname=env::args().skip(1).next();matchname{Some(n)=\u0026gt;println!(\u0026#34;Hello, {}!\u0026#34;,n),None=\u0026gt;println!(\u0026#34;Did\u0026#39;t get a name!\u0026#34;),}}编译并运行  $ rustc hello.rs $ ls # hello hello.rs $ ./hello # Did\u0026#39;t get a name! $ ./hello Rust # Hello, Rust! "},{"id":10,"href":"/books/rust/resources/","title":"98. 资源分享","parent":"","content":"","description":""},{"id":11,"href":"/books/rust/tags/","title":"Tags","parent":"","content":"","description":""}]