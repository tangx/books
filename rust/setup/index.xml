<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1. 环境准备 on Rust Rusher</title><link>https://typonotes.com/books/rust/setup/</link><description>Recent content in 1. 环境准备 on Rust Rusher</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/rust/setup/index.xml" rel="self" type="application/rss+xml"/><item><title>1. 安装配置</title><link>https://typonotes.com/books/rust/setup/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/rust/setup/install/</guid><description>在 官网 有推荐的安装方式。
这里 推荐 使用 rustup-init 安装
在安装之前， 需要提前配置环境变量
crates 仓库 加速源 安装位置 (可选): 默认安装位置是在 ${HOME} 下面。 执行 rustup-init 时有提示。 # Required: In China # https://zhuanlan.zhihu.com/p/126204128 ## 字节加速源 export RUSTUP_DIST_SERVER=&amp;#34;https://rsproxy.cn&amp;#34; export RUSTUP_UPDATE_ROOT=&amp;#34;https://rsproxy.cn/rustup&amp;#34; # ## Optional: customize install # export RUST_ROOT=/usr/local/rust # ### RUST offical config # export RUSTUP_HOME=${RUST_ROOT}/rustup # export CARGO_HOME=${RUST_ROOT}/cargo # ### Setup: Export Path # source &amp;#34;${CARGO_HOME}/env&amp;#34; 使用 rustup-init 安装 在 其他安装方式 - Rustup 页面下载对应系统的 rustup-init 文件。</description></item><item><title>2. RustRover</title><link>https://typonotes.com/books/rust/setup/rust-rover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/rust/setup/rust-rover/</guid><description>使用 RustRover 的时候， 可能 如果你会经常遇到被卡住的情况。
可能原因
你没有配置 cargo 的本地源， 参考 [./install.md]
可能你配置了本地源， 但是在 RustRover 中不生效。
如图， 配置了网络代理后看到的网络链接情况。 cargo 依旧在链接官方网站（在海外）
解决方法
如果你是 mac 电脑， 可以考虑下载一个 Proxifier。 针对 cargo 设置一个代理规则。</description></item><item><title>2. vscode 配置</title><link>https://typonotes.com/books/rust/setup/vscode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/rust/setup/vscode/</guid><description>1. 插件安装 官方插件 rust-analyzer cargo 管理插件 crates 2. 自动保存 在 settings.json 中增加如下配置
{ &amp;#34;files.associations&amp;#34;: { &amp;#34;*.rs&amp;#34;: &amp;#34;rust&amp;#34;, }, &amp;#34;[rust]&amp;#34;: { // rust &amp;#34;editor.formatOnSave&amp;#34;: true, }, }</description></item><item><title>3. Demo - Hello Rust</title><link>https://typonotes.com/books/rust/setup/demo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/rust/setup/demo/</guid><description> 创建文件 hello.rs // hello.rs usestd::env;fn main(){letname=env::args().skip(1).next();matchname{Some(n)=&amp;gt;println!(&amp;#34;Hello, {}!&amp;#34;,n),None=&amp;gt;println!(&amp;#34;Did&amp;#39;t get a name!&amp;#34;),}}编译并运行 $ rustc hello.rs $ ls # hello hello.rs $ ./hello # Did&amp;#39;t get a name! $ ./hello Rust # Hello, Rust!</description></item></channel></rss>