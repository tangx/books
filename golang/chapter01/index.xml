<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>01. Go开发环境配置 on 《Shell 转 Go》</title>
    <link>https://typonotes.com/books/golang/chapter01/</link>
    <description>Recent content in 01. Go开发环境配置 on 《Shell 转 Go》</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/golang/chapter01/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. 项目简介</title>
      <link>https://typonotes.com/books/golang/chapter01/01-introduce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://typonotes.com/books/golang/chapter01/01-introduce/</guid>
      <description></description>
    </item>
    
    <item>
      <title>2. 下载安装与环境配置</title>
      <link>https://typonotes.com/books/golang/chapter01/02-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://typonotes.com/books/golang/chapter01/02-install/</guid>
      <description>下载和安装 前往 官网Go下载地址 页面下载与自己操作系统对应二进制文件。
通常我会选择压缩包， 然后解压到所需要安装的目录。
例如， 我是 mac 的 intel 系统， go1.19.6.darwin-amd64.tar.gz
cd /tmp wget -c https://go.dev/dl/go1.19.6.darwin-amd64.tar.gz sudo tar xf go1.19.6.darwin-amd64.tar.gz -C /usr/local 配置环境变量 GOPROXY: Go代理地址， 通常使用 https://goproxy.cn 或 https://goproxy.io GOROOT: Go 二进制的位置, 即我们上面解压目录的 /usr/local/go GOPATH: 这个是我们项目代码的位置， 有了 go mod 之后 不是绝对的了 使用 go install 后， 编译的二进制会默认在 $GOPATH/bin/ 使用 go get 下载的所有库文件在 $GOPATH/pkg/mod/ 中 可以直接 go mod init， 如果项目在 $GOPATH/src/ 中， 会默认以相对目录配置 module 路径。 对于 Mac 和 Linux 系统， 设置环境变量。 配置到 /etc/profile 中。</description>
    </item>
    
    <item>
      <title>3. VSCode配置与插件</title>
      <link>https://typonotes.com/books/golang/chapter01/03-vscode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://typonotes.com/books/golang/chapter01/03-vscode/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
