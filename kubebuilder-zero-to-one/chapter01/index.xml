<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Chapter01 on 从零开始写一个 kubebuilder</title><link>https://books.tangx.in/kubebuilder-zero-to-one/chapter01/</link><description>Recent content in Chapter01 on 从零开始写一个 kubebuilder</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://books.tangx.in/kubebuilder-zero-to-one/chapter01/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://books.tangx.in/kubebuilder-zero-to-one/chapter01/01-kubebuilder-init-project/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://books.tangx.in/kubebuilder-zero-to-one/chapter01/01-kubebuilder-init-project/</guid><description>使用 kuberbuilder 初始化项目 kubebuilder init --domain tangx.in kubebuilder create api --group myapp --version v1 --kind Redis apiVersion:myapp.tangx.in/v1kind:Redismetadata:name:my-op-redisspec:replicas:1port:3333# 安装 make install # 卸载 make uninstall 查看 crd
k get crd |grep tangx.in redis.myapp.tangx.in 2021-11-19T06:16:43Z</description></item><item><title/><link>https://books.tangx.in/kubebuilder-zero-to-one/chapter01/02-simplest-redis-crd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://books.tangx.in/kubebuilder-zero-to-one/chapter01/02-simplest-redis-crd/</guid><description>简单跑一跑 定义 CRD Redis 对象字段 在 /api/v1/redis_types.go 中， 增加 Replicas 和 Port 字段。
type RedisSpec struct { // INSERT ADDITIONAL SPEC FIELDS - desired state of cluster // Important: Run &amp;#34;make&amp;#34; to regenerate code after modifying this file // Foo is an example field of Redis. Edit redis_types.go to remove/update // Foo string `json:&amp;#34;foo,omitempty&amp;#34;` Replicas int `json:&amp;#34;replicas,omitempty&amp;#34;` Port int32 `json:&amp;#34;port,omitempty&amp;#34;` } 这个 RedisSpec 对应 /deploy/my-op-redis.</description></item><item><title/><link>https://books.tangx.in/kubebuilder-zero-to-one/chapter01/03-deploy-crd-controller/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://books.tangx.in/kubebuilder-zero-to-one/chapter01/03-deploy-crd-controller/</guid><description>发布 crd controller 设置 docker server 网络代理， 避免编译的时候下载所依赖的 gcr.io 镜像失败。 参考文章 设置 docker server 网路代理
修改 Makefile, 设置默认 image name
VERSION ?= v$(shell cat .version) # Image URL to use all building/pushing image targets IMG ?= cr.docker.tangx.in/jtredis/controller:$(VERSION) 修改镜像 pull 策略。 在 /config/manager/manager.yaml 配置文件中， 添加 imagePullPolicy 策略。 由于本地开发， 并不准备上传到云上， 所以设置为 IfNotPresent。 spec:securityContext:runAsNonRoot:truecontainers:- command:- /managerargs:- --leader-electimage:controller:latestname:manager## 由于不上传到镜像仓库， 所以这里以本地编译的版本为准imagePullPolicy:IfNotPresent执行编译 make docker-build 发布 make deploy</description></item></channel></rss>