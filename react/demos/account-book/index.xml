<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>3. 账本案例 on React18</title><link>https://typonotes.com/books/react/demos/account-book/</link><description>Recent content in 3. 账本案例 on React18</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/react/demos/account-book/index.xml" rel="self" type="application/rss+xml"/><item><title>01. 初始化</title><link>https://typonotes.com/books/react/demos/account-book/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/demos/account-book/setup/</guid><description>使用 npm vite 创建项目 npm create vite@latest # React # JavaScript 使用 JsonServer 模拟数据 json-server --port 3001 /src/server/data/data/json 配置 pakcage.json 同时启动 json-server 和 dev 环境 &amp;#34;scripts&amp;#34;: { &amp;#34;dev&amp;#34;: &amp;#34;npm run server &amp;amp; vite&amp;#34;, &amp;#34;build&amp;#34;: &amp;#34;vite build&amp;#34;, &amp;#34;lint&amp;#34;: &amp;#34;eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0&amp;#34;, &amp;#34;preview&amp;#34;: &amp;#34;vite preview&amp;#34;, &amp;#34;server&amp;#34;:&amp;#34;json-server --port 3001 ./src/server/data/data.json&amp;#34; },</description></item><item><title>02. 初始化 route</title><link>https://typonotes.com/books/react/demos/account-book/route/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/demos/account-book/route/</guid><description>安装 react-route npm install react-router-dom 创建目录结构 tree . ├── components │ ├── Layout │ │ ├── Month │ │ │ └── index.jsx │ │ ├── Year │ │ │ └── index.jsx │ │ └── index.jsx │ └── New │ └── index.jsx 在 /src/routes/index.jsx 因为要写标签， 一定要用 jsx 中， 创建路由 import { createBrowserRouter } from &amp;#34;react-router-dom&amp;#34;; import Layout from &amp;#34;../components/Layout&amp;#34;; import Month from &amp;#34;../components/Layout/Month&amp;#34;; import Year from &amp;#34;../components/Layout/Year&amp;#34;; import New from &amp;#34;.</description></item><item><title>03. 使用 redux 管理数据</title><link>https://typonotes.com/books/react/demos/account-book/redux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/demos/account-book/redux/</guid><description>1. 安装 redux 和 toolskit $ npm install @reduxjs/toolkit react-redux 2. 初始化 redux store 在 /src/demos/AccountBook/src/store/accountStore/index.js 中 使用 createSlice 创建 accountStore 初始化 name, initialState, reducers 默认导出 accountStore.reduer 在 /src/demos/AccountBook/src/store/index.js 中 使用 configureStore 创建 store 导入 accountStore.reduer。 再导入 store.reducer 中， 并指定为 account。 默认导出 store 在 /src/demos/AccountBook/src/demos/AccountBook/src/App.jsx 中 从 redux 中导入 Provider 使用 Provider 包裹 App， 并传递 store 在 /src/demos/AccountBook/src/demos/AccountBook/src/components/Layout/index.</description></item><item><title>04. andD-mobile 主题</title><link>https://typonotes.com/books/react/demos/account-book/antd-mobile-theme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/demos/account-book/antd-mobile-theme/</guid><description>And Design Mobile 是一个 移动端 的样式库
1. 安装 $ npm install --save antd-mobile # or $ yarn add antd-mobile 2. 使用 import { Button } from &amp;#39;antd-mobile&amp;#39; // 组件按钮 &amp;lt;Button type=&amp;#34;primary&amp;#34;&amp;gt;点我+1&amp;lt;/Button&amp;gt; // 原生按钮 &amp;lt;button&amp;gt;点我+1&amp;lt;/button&amp;gt; 3. 主题定制 全局定制: 整个应用范围 内的所有组件都生效 /* 蓝色 */ :root:root { --adm-color-primary: #006DFD; } 局部定制: 只有在某些元素 内部生效。 /* 紫色 */ .purple-theme { --adm-color-primary: #9E53D4; }</description></item></channel></rss>