<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>5. 组件通信 on 《React 18 step by step》</title><link>https://typenotes.com/books/react/react/communication/</link><description>Recent content in 5. 组件通信 on 《React 18 step by step》</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typenotes.com/books/react/react/communication/index.xml" rel="self" type="application/rss+xml"/><item><title>context 跨层级通信</title><link>https://typenotes.com/books/react/react/communication/context/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typenotes.com/books/react/react/communication/context/</guid><description/></item><item><title>props 通信</title><link>https://typenotes.com/books/react/react/communication/props/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typenotes.com/books/react/react/communication/props/</guid><description>1. 父传子通信 /src/components/communication/Parent2Children.jsx
实现步骤
传递数据: 父组件 在 子组件 上 绑定属性 接收数据: 子组件 使用 props 参数接收数据。 function Parent() { const name = &amp;#34;Zhangsan&amp;#34;; const age = 18; return ( &amp;lt;div&amp;gt; &amp;lt;span&amp;gt;Parent Area: &amp;lt;/span&amp;gt; &amp;lt;span&amp;gt;name=Zhangsan, age=18&amp;lt;/span&amp;gt; {/* 1. 通过属性给 Child 传递数据 */} &amp;lt;Child name={name} age={age} /&amp;gt; &amp;lt;/div&amp;gt; ); } // 2. 定义的时候， 使用 props 接收参数 function Child(props) { // 打印所有 props console.log(props); return ( &amp;lt;div&amp;gt; &amp;lt;span&amp;gt;Child Area: &amp;lt;/span&amp;gt; {/* 3.</description></item></channel></rss>