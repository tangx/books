<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>路由管理 on React18</title><link>https://typonotes.com/books/react/react/router/</link><description>Recent content in 路由管理 on React18</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/react/react/router/index.xml" rel="self" type="application/rss+xml"/><item><title>1. 安装</title><link>https://typonotes.com/books/react/react/router/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/react/router/setup/</guid><description>安装 $ npm install react-router-dom 在 package.json 中， 可以看到版本为 6.22.1
&amp;#34;dependencies&amp;#34;: { &amp;#34;react-router-dom&amp;#34;: &amp;#34;^6.22.1&amp;#34;, }, 使用 在 /src/components/router/RootRouter.jsx 中
使用 createBrowserRouter 创建 路由列表 router。 在组件中， 使用 RouterProvider 使用路由页面。 注意： 当前路由中使用的是 element 字段， 而非 componenet。
之后就可以访问 http://localhost:3000/page1 或者 http://localhost:3000/page2 切换页面了。
import { createBrowserRouter, RouterProvider } from &amp;#34;react-router-dom&amp;#34;; // 创建路由 const router = createBrowserRouter([ { path: &amp;#34;/page1&amp;#34;, element: &amp;lt;div&amp;gt;Page1&amp;lt;/div&amp;gt;, }, { path: &amp;#34;/page2&amp;#34;, element: &amp;lt;div&amp;gt;Page2&amp;lt;/div&amp;gt; } ]) export default function RootRouter() { return ( &amp;lt;div&amp;gt; &amp;lt;h2&amp;gt;8.</description></item><item><title>2. 路由导航</title><link>https://typonotes.com/books/react/react/router/navigate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/react/router/navigate/</guid><description>使用 路由导航 可以在不同组件之间切换。
创建两个组件 Login 和 Article。 目录结构如下。
统一 import 到 RootRouter 下管理， 对应的 router 也需要做调整。
import { createBrowserRouter, RouterProvider } from &amp;#34;react-router-dom&amp;#34;; import Login from &amp;#34;./Login&amp;#34;; import Article from &amp;#34;./Article&amp;#34;; const router = createBrowserRouter([ { path: &amp;#34;/login&amp;#34;, element: &amp;lt;Login /&amp;gt; // 登录 Login }, { path: &amp;#34;/article&amp;#34;, element: &amp;lt;Article /&amp;gt; // 文章 Article } ]) export default function RootRouter() { return ( &amp;lt;div&amp;gt; &amp;lt;h2&amp;gt;8. 路由页面 Root Page&amp;lt;/h2&amp;gt; &amp;lt;RouterProvider router={router} /&amp;gt; &amp;lt;/div&amp;gt; ); } 声明式导航 声明式导航: 是指通过在模版中使用 &amp;lt;Link /&amp;gt; 组件描述出要跳转到哪里去。 比如后台管理系统的左侧菜单通常使用这种方式进行。</description></item></channel></rss>