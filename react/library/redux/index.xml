<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>redux on React18</title><link>https://typonotes.com/books/react/library/redux/</link><description>Recent content in redux on React18</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://typonotes.com/books/react/library/redux/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Redux计数器（纯网页版）</title><link>https://typonotes.com/books/react/library/redux/counter-demo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://typonotes.com/books/react/library/redux/counter-demo/</guid><description>在不使用 React 框架的情况下。 仅使用 Redux 实现一个计数器功能。
使用步骤 定义一个 reducer 函数。 （根据当前想要做的修改返回一个心的状态） 使用 createStore 方法传入 reducer， 生成一个 store 实例对象 使用 store 实例的 subscribe 方法 订阅数据变化。 （数据一旦变化， 可以得到通知） 使用 store 实例的 dispatch 方法提交 action 对象 触发数据变化。 （告诉 reducer 所需要执行的操作） 使用 store 实例 getState 方法 获取最新的状态数据， 并更新到试图中。 注意： Redux 不会主动更新视图， 需要主动调用 document DOM 绑定数据。
示例代码 本案例中使用 redux@4.2.1， 最新版本 5.0.x API 有新变化， 页面代码不兼容。 （2024-02-18）</description></item></channel></rss>